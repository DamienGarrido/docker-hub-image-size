#!/bin/bash

docker_hub_endpoint='https://hub.docker.com/v2/repositories'

function usage {
	cat <<EOT
Usage: ${0##*/} <image>[:tag] [os] [arch] [page_size]

Examples:
	${0##*/} ubuntu

	${0##*/} maven linux arm64

	${0##*/} portainer/portainer:latest linux amd64 200

EOT
}

[[ $# -lt 1 ]] && usage && exit

image="${1%%:*}"
tag="${1##*:}"
os="${2:-linux}"
arch="${3:-amd64}"
page_size="${4:-100}"

[[ "${image}" == "${tag}" ]] && tag='latest'
page_num=1
while
	response="$( curl -s "${docker_hub_endpoint}/${image}/tags/?page_size=${page_size}&page=${page_num}" )"
	if [[ ! "$( echo "${response}" | jq -r '.count' )" =~ ^[0-9]+$ ]]
	then
		if [[ ${library_check} -ne 1 ]]
		then
			library_check=1
			image="library/${image}"
			page_num=1
			continue
		else
			echo "ERROR: Image not found: ${image}" >&2 && exit
		fi
	fi
	[[ "$( echo "${response}" | jq -r '.detail' )" == 'Not found' ]] \
		&& echo "ERROR: Tag not found: ${tag}" >&2 && exit
	[[ -z "$( echo "${response}" \
		| jq -r ".results[] | select(.name==\"${tag}\") | .name" )" ]]
do
	page_num=$(( page_num + 1 ))
done

images="$( echo "${response}" | jq ".results[] | select(.name==\"${tag}\") | .images" )"
os_images="$( echo "${images}" | jq "[ .[] | select(.os==\"${os}\") ]" )"
[[ "$( echo "${os_images}" | jq 'length' )" -eq 0 ]] && echo "ERROR: OS not found: ${os}" >&2 && exit
arch_images="$( echo "${os_images}" | jq "[ .[] | select(.architecture==\"${arch}\") ]" )"
[[ "$( echo "${arch_images}" | jq 'length' )" -eq 0 ]] && echo "ERROR: Architecture not found: ${arch}" >&2 && exit
echo "${arch_images}" | jq -r '[ .[].size ] | add'
